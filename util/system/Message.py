import sys
from util.system import Time
from util.system import Type

message_dict = {
    2000101: '''指定的文件路径格式有误，不应为空''',
    2000102: '''指定的文件路径格式有误''',
    2000103: '''指定的文件不存在''',
    2000104: '''指定的文件有误，无法获取读取权限''',
    2000105: '''指定的文件过大，无法加载''',
    2000106: '''文件I/O错误''',
    2000107: '''文件I/O错误，在执行过程中被用户/系统移除''',
    2000108: '''文件I/O错误，在执行过程中被用户/系统移除''',

    2010101: '''系统核心文件丢失，没有拦截文件非法检查的请求，请重新安装程序文件。''',
    2010102: '''系统核心文件丢失，没有拦截文件非法检查的请求，请重新安装程序文件。''',
    2010103: '''文件I/O错误''',
    2010104: '''文件I/O错误，在执行过程中被用户/系统移除''',
    2010105: '''文件I/O错误，在执行过程中被用户/系统移除''',
    2010201: '''指定的文件路径格式有误，不应为空''',
    2010202: '''指定的文件路径格式有误''',
    2010203: '''文件已存在，继续操作可能覆盖该文件''',
    2010204: '''无法获取文件写入权限''',

    2040101: '''创建文件时遇到系统I/O错误''',
    2040102: '''文件已存在，无法新建''',  # When create mode set as force will hide the error report

    2050101: '''指定的文件路径格式有误，不应为空''',
    2050102: '''指定的文件路径格式有误''',
    2050103: '''指定的文件路径格式有误''',
    2050104: '''文件已存在，继续操作可能覆盖该文件''',
    2050105: '''无法获取文件写入权限''',
    2050201: '''指定的文件路径格式有误，不应为空''',
    2050202: '''指定的文件路径格式有误''',
    2050203: '''指定的文件路径格式有误''',
    2050204: '''指定的文件不存在''',
    2050205: '''指定的文件有误，无法获取读取权限''',
    2050301: '''指定的输入文件路径格式有误，不应为空''',
    2050302: '''指定的输出文件路径格式有误，不应为空''',
    2050303: '''指定的输入文件路径格式有误''',
    2050304: '''指定的输出文件路径格式有误''',
    2050305: '''指定的输入文件路径过长''',
    2050306: '''指定的输出文件路径过长''',
    2050307: '''指定的输入文件不存在''',
    2050308: '''指定的输入文件有误，无法获取读取权限''',
    2050309: '''文件已存在，继续操作可能覆盖该文件''',
    2050310: '''无法获取输出文件写入权限''',

    2060101: '''指定的文件路径格式有误''',
    2060102: '''指定的文件路径格式有误，不应为空''',
    2060103: '''指定的输入文件路径过长''',
    2060104: '''指定的输入文件不存在，无法删除''',

    2110101: '''数据清洗功能无法处理该类型数据''',
    2110301: '''数据清洗功能无法处理该数据''',
    2110401: '''数据清洗功能无法处理该数据中空白行''',
    2110402: '''数据清洗功能无法处理空数据''',
    2110403: '''数据清洗功能无法处理该数据中空白行''',

    2300101: '''时间处理模块无法转换将数字转换为字符串，可能是系统核心文件丢失。''',

    3010101: '''分词输入数据格式有误''',
    3010201: ''''''
}

message_dict_en = {

}


def error(error_code):
    error_without_die(error_code)
    die()


def error_without_die(error_code):
    print('------------------------------------------------------------------------------')
    print('错误 - 系统于 ' + Time.current_time_string() + ' 终止')
    print('错误代码 ' + str(error_code) + ' / Error Code ' + str(error_code))
    print(message_dict.get(error_code))
    # print(message_dict_en.get(error_code))
    print('------------------------------------------------------------------------------')


def warning(warning_code):
    print('warning - ' + str(warning_code))
    # print('------------------------------------------------------------------------------')
    # print('Warning (' + str(warning_code) + ') - '+ Time.current_time_string() + ':')
    # print(message_dict.get(warning_code))
    # # print(message_dict_en.get(warning_code))
    # print('------------------------------------------------------------------------------')


def warning_die(warning_code):
    warning(warning_code)
    die()

def info(message):
    if not Type.is_str(message):
        error(990101)
    print('------------------------------------------------------------------------------')
    print(Time.current_time_string() )
    print('提示：')
    print(message)
    print('------------------------------------------------------------------------------')

def die():
    sys.exit(-1)

